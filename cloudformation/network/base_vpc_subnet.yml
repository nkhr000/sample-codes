AWSTemplateFormatVersion: 2010-09-09
Parameters: 
  vpc:
    Type: String
    Default: 10.0.0.0/24
    Description: "VPC CIDR"
  publicSubnet1CIDR:
    Type: String
    Default: 10.0.0.0/26
    Description: "Subnet1 CIDR"
  publicSubnet2CIDR:
      Type: String
      Default: 10.0.0.64/26
      Description: "Subnet2 CIDR"
  privateSubnet1CIDR:
      Type: String
      Default: 10.0.0.128/26
      Description: "Subnet1 CIDR"
  privateSubnet2CIDR:
      Type: String
      Default: 10.0.0.192/26
      Description: "Subnet2 CIDR"
  AZ1:
      Type: String
      Default: "ap-northeast-1a"
      Description: "Tokyo Region 1a"
  AZ2:
      Type: String
      Default: "ap-northeast-1c"
      Description: "Tokyo Region 1c"
Resources: 
  vpc1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref vpc 
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: manual-usage
  publicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZ1
      VpcId: !Ref vpc1
      CidrBlock: !Ref publicSubnet1CIDR
      Tags:
        - Key: Name
          Value: public-a1-manual-usage
  publicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZ2
      VpcId: !Ref vpc1
      CidrBlock: !Ref publicSubnet2CIDR
      Tags:
        - Key: Name
          Value: public-c1-manual-usage
  privateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZ1
      VpcId: !Ref vpc1
      CidrBlock: !Ref privateSubnet1CIDR
      Tags:
        - Key: Name
          Value: private-a1-manual-usage
  privateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZ2
      VpcId: !Ref vpc1
      CidrBlock: !Ref privateSubnet2CIDR
      Tags:
        - Key: Name
          Value: private-1c-manual-usage

  igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: manual-usage-igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref vpc1
      InternetGatewayId: !Ref igw  
  publicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc1
      Tags:
        - Key: Name
          Value: manual-usage-public
  privateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc1
      Tags:
        - Key: Name
          Value: manual-usage-private

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref publicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref igw

  publicRouteTableAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet1
      RouteTableId: !Ref publicRT
  publicRouteTableAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet2
      RouteTableId: !Ref publicRT
  privateRouteTableAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnet1
      RouteTableId: !Ref privateRT
  privateRouteTableAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnet2
      RouteTableId: !Ref privateRT

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - "s3:*"
            Resource: "*"
      RouteTableIds:
        - !Ref publicRT
        - !Ref privateRT
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref vpc1

Outputs:
  VpcId:
    Value: !Ref vpc1
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"
  PublicSubnet1Id:
    Value: !Ref publicSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet1ID"
  PublicSubnet2Id:
    Value: !Ref publicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet2ID"
  PrivateSubnet1Id:
    Value: !Ref publicSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet1ID"
  PrivateSubnet2Id:
    Value: !Ref publicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet2ID"      
