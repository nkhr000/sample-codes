AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ClusterIdentifier:
    Type: String
    Default: test
  NodeType:
    Type: String
    Default: dc2.large
  MasterUsername:
    Type: String
  MasterUserPassword:
    Type: String
    NoEcho: true
  DBName:
    Type: String
    Default: test
  SnapshotId:
    Type: String
  SnapshotAccountNumber:
    Type: String  
    Description: If the snapshot was created same account, the value should be blank
  VpcId:
    Type: String
  SubnetId:
    Type: String
  SubnetAZ: 
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-northeast-1a
  Port:
    Type: Number
    Default: "5439"
  EnvTagName:
    Type: String
  InboundOnPremiseCIDR:
    Type: String

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label:           
          default: "Network Configuration"
        Parameters:     
          - VpcId
          - SubnetId
          - SubnetAZ
          - InboundOnPremiseCIDR
          - EnvTagName
      - Label:           
          default: "Redshift Configuration"
        Parameters:   
          - SnapshotId  
          - SnapshotAccountNumber
          - ClusterIdentifier
          - NodeType
          - MasterUsername
          - MasterUserPassword   
          - Port
          - DBName

Conditions:
  IsSnapshotAccountSpecified:
    Fn::Not:
    - Fn::Equals:
      - ''
      - !Ref SnapshotAccountNumber

Resources:
  SubnetGroup:
    Type: AWS::Redshift::ClusterSubnetGroup
    Properties:
      Description: Redshift cluster subnet group
      SubnetIds:
        - !Ref SubnetId
      Tags:
        - Key: Name
          Value: !Sub subnet-group-${EnvTagName}
        - Key: ENV
          Value: !Ref EnvTagName

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Ref VpcId
      GroupName: redshift-sg
      GroupDescription: !Sub ${AWS::StackName}-redshift-sg
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref Port
          ToPort: !Ref Port
          CidrIp: !Ref InboundOnPremiseCIDR

  ClusterParameterGroup: 
    Type: AWS::Redshift::ClusterParameterGroup
    Properties: 
      Description: 'test redshift'
      ParameterGroupFamily: "redshift-1.0"
      Parameters: 
        - ParameterName: require_ssl
          ParameterValue: "true"

  Cluster: 
    Type: AWS::Redshift::Cluster
    Properties:
      AllowVersionUpgrade: false
      AquaConfigurationStatus: disabled
      AutomatedSnapshotRetentionPeriod: 1
      AvailabilityZone: !Ref SubnetAZ
      # AvailabilityZoneRelocation: false
      # AvailabilityZoneRelocationStatus: String
      Classic: false
      ClusterIdentifier: !Ref ClusterIdentifier
      ClusterParameterGroupName: !Ref ClusterParameterGroup
      # ClusterSecurityGroups: 
      #   - String
      ClusterSubnetGroupName: !Ref SubnetGroup
      ClusterType: 'single-node'
      DBName: !Ref DBName
      DeferMaintenance: false
      Encrypted: true
      EnhancedVpcRouting: true
      IamRoles: 
        - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift
      ManualSnapshotRetentionPeriod: 1
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      NodeType: !Ref NodeType
      NumberOfNodes: 2
      OwnerAccount: !If [IsSnapshotAccountSpecified, !Ref SnapshotAccountNumber, AWS::NoValue]
      Port: !Ref Port
      #-- JST Sun 16:00 - Sun 16:30
      PreferredMaintenanceWindow: 'Sun:07:00-Sun:07:30'
      PubliclyAccessible: false  
      SnapshotIdentifier: !Ref SnapshotId
      Tags: 
        - Key: Name
          Value: !Sub redshift-${EnvTagName}
        - Key: ENV
          Value: !Ref EnvTagName
      VpcSecurityGroupIds: 
        - !Ref SecurityGroup
        
Outputs:
  ClusterIdentifier:
    Value: !Ref ClusterIdentifier
  Endpoint:
    Value: !GetAtt Cluster.Endpoint.Address
  Port:
    Value: !GetAtt Cluster.Endpoint.Port
  Database:
    Value: !Ref DBName
  Username:
    Value: !Ref MasterUsername
  AccessCmnd:
    Value: !Sub "rsql -h ${Cluster.Endpoint.Address} -U ${MasterUsername} -d ${DBName}"
